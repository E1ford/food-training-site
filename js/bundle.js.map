{"version":3,"sources":["webpack://food_dist/./js/modules/calc.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/forms.js","webpack://food_dist/./js/modules/modal.js","webpack://food_dist/./js/modules/slider.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/./js/script.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;AACA,sB;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,IAAI,WAAW,WAAW;AAChF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,iCAAiC,M;AAC7D;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,mCAAmC,SAAS,OAAO,SAAS;AAC5D,0DAA0D,aAAa;AACvE,wDAAwD,UAAU;AAClE;AACA;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA;AACA;;AAEA,sCAAsC,eAAe;;AAErD;AACA;;AAEA;AACA,uB;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA,aAAa;AACb;;;AAGA,SAAS;AACT;;AAEA;AACA,uB;;;;;;;;;;AC9FA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,S;AACA,KAAK;;AAEL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA,uB;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oDAAoD,OAAO;;;AAG3D;AACA,2B;AACA,SAAS;AACT;AACA;;;AAGA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,uC;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA;AACA,oDAAoD,OAAO;;AAE3D,KAAK;AACL;AACA,wB;;;;;;;;;;ACnFA;;AAEA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iB;AACA,aAAa;AACb;AACA,KAAK;AACL;;;AAGA,sB;;;;;;;;;;ACpDA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,c;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,uB;;;;;;UCtDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;;AAEb;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,kBAAkB,mBAAO,CAAC,gDAAkB;AAC5C,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,iBAAiB,mBAAO,CAAC,8CAAiB;;;AAG1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC","file":"bundle.js","sourcesContent":["function calc(){\r\n\r\n}\r\nmodule.exports = calc;","function cards(){\r\n    // получение данныхэ меню\r\n        // const getResource = async(url, ) => {\r\n        //     const res = await fetch(url);\r\n        //     // если ошибка\r\n        //     if (!res.ok){\r\n        //         throw new Error(`could not fetch ${url}, status ${res.status}`);\r\n        //     }\r\n        // // преобразовываем данные из json\r\n        //     return await res.json();\r\n        // };\r\n        \r\n    // получение данных от сервера  и реализация на их основе карточек\r\n    axios.get('http://localhost:3000/menu')\r\n    .then(data => {\r\n        data.data.forEach(({img, altimg, title, descr, price}) => {    \r\n        new Menu(img, altimg, title, descr, price, '.menu .container').insert();\r\n        });\r\n    });\r\n    // класс меню\r\n    class Menu {\r\n\r\n        constructor(src, alt, heading, text, price, parentsEl, ...rest ){\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.heading = heading;\r\n            this.text = text;\r\n            this.price = price;\r\n            this.parentsEl = parentsEl;\r\n            this.classes = rest;\r\n        }\r\n        insert(){\r\n            const divInsert = document.createElement('div');\r\n            if(this.classes.length === 0){\r\n                this.classes = 'menu__item';\r\n            } else {\r\n                this.classes.forEach(className => divInsert.classList.add(className));\r\n            }\r\n            \r\n            divInsert.innerHTML = `<div class=\"menu__item\">\r\n                        <img src=${this.src} alt=${this.alt}>\r\n                        <h3 class=\"menu__item-subtitle\">${this.heading}</h3>\r\n                        <div class=\"menu__item-descr\">${this.text}</div>\r\n                        <div class=\"menu__item-divider\"></div>\r\n                        <div class=\"menu__item-price\">\r\n                            <div class=\"menu__item-cost\">Цена:</div>\r\n                            <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                        </div>\r\n                    </div>\r\n            `;\r\n\r\n            document.querySelector(`${this.parentsEl}`).append(divInsert);\r\n            \r\n        }\r\n    }\r\n\r\n}\r\nmodule.exports = cards;","function forms(){\r\n    // функция для реализации всплывающего окна\r\n    function showThanksModal(message){\r\n        // получаем окно \r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n        // скрываем окно \r\n        prevModalDialog.classList.add('hide');\r\n        // // открываем окно\r\n        openModal();\r\n        // создаем новое окно без инпутов\r\n        const thanksModal = document.createElement('div');\r\n        // присваиваем окну классы \r\n        thanksModal.classList.add('modal__dialog');\r\n        // структура окна \r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal_title\" data-close>${message}</div>\r\n            </div>\r\n        `;\r\n        // вставляем наше созданно е окно в модал\r\n        document.querySelector('.modal').append(thanksModal);\r\n        // удаляем окно через время\r\n        setTimeout(() =>{\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();\r\n            \r\n        }, 3000);\r\n    }\r\n\r\n    // отправка информации на сервер формы\r\n    // получаем наши формы\r\n    const forms = document.querySelectorAll('form');\r\n\r\n    // просто текстовая информация, используется для отображения работы\r\n    const message = {\r\n        loading:'img/form/spinner.svg',\r\n        success:'спасибо мы скоро с вами свяжимся',\r\n        failure:'что то пошло не так...',\r\n    };\r\n    // подключаем наши формы\r\n    forms.forEach(item  => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    const postData = async(url, data) => {\r\n        const res = await fetch(url, {\r\n            method:'POST', \r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n    });\r\n        return await res.json();\r\n    };\r\n    // основная функция\r\n    function bindPostData(form){\r\n\r\n        // обработчик событий при нажатии на кнопку btn\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            // нужно для отображения информации типа (загрузка, успешно и тд)\r\n            let statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;\r\n            `;\r\n            form.append(statusMessage);\r\n            let formData = new FormData(form);\r\n\r\n             const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n          \r\n            // создаем сам запрос\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                    console.log(data);\r\n                    showThanksModal(message.success);\r\n                    \r\n                    statusMessage.remove();\r\n            }).catch(()=>{\r\n                    showThanksModal(message.failure);\r\n            }).finally(()=>\r\n                    form.reset());\r\n            \r\n           \r\n        });\r\n    }\r\n\r\n}\r\nmodule.exports = forms;","function modal(){\r\n    // реализация модального окна \"связаться с нами\"\r\n\r\n    const    modalWind = document.querySelector('.modal'),\r\n            modalBtn = document.querySelectorAll('[Data-modal]');\r\n\r\n\r\n    //реальзация открытия окна\r\n    function openModal(){\r\n        modalWind.classList.add('show');\r\n        modalWind.classList.remove('hide');\r\n        document.body.style.overflow = \"hidden\";\r\n        clearInterval(modalTimerId);\r\n    }\r\n    //реализация закрытия окна\r\n    function closeModal(){\r\n        modalWind.classList.remove('show');\r\n        modalWind.classList.add('hide');\r\n        document.body.style.overflow = \"\";\r\n    }\r\n\r\n    //вешаем обработчик событий на кнопку открытия окна\r\n    modalBtn.forEach(item => {\r\n        item.addEventListener('click', () => {\r\n        openModal();\r\n        });\r\n    });\r\n\r\n    //реализуем закрытие окна при нажатии сбоку от окна\r\n    modalWind.addEventListener('click', (e)=>{\r\n        if(e.target && e.target === modalWind || e.target.classList.contains('modal__close')){\r\n            closeModal();\r\n        }\r\n    });\r\n    // вешаем на документ обработчик собыйтий (нажатий на клавиатуру) для закрытия на esc\r\n    document.addEventListener('keydown', (event) => {\r\n        if(event.code === 'Escape' && modalWind.classList.contains('show')){\r\n            closeModal();\r\n        } \r\n    });\r\n\r\n    //вешаем обработчик событий на кнопку закрытия окна \r\n    // таймер для открытия модального окна через время\r\n    const modalTimerId = setTimeout(openModal, 60000);\r\n\r\n\r\n    // еслил мы прокрутили страницу до конца то открываем окно\r\n    function showModalByScroll(){\r\n        if(window.pageYOffset + document.documentElement.clientHeight>= document.documentElement.scrollHeight){\r\n            openModal();\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n\r\n    \r\n}\r\nmodule.exports = modal;","function slider(){\r\n    // слайдер \r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        next = document.querySelector('.offer__slider-next'),\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        slideField = document.querySelector('.offer__slider-inner'),\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n// счетчик\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n// добавляет 0 если <10\r\n    if(slides.length < 10){\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    }else{\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n    slideField.style.width = 100 * slides.length + '%';\r\n    slideField.style.display = 'flex';\r\n    slideField.style.transition = '0.5s all';\r\n\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    next.addEventListener('click', ()=> {\r\n        if(offset == +width.slice(0, width.length -2) * (slides.length - 1)){\r\n            offset = 0;\r\n        }else{\r\n            offset += +width.slice(0, width.length -2 );\r\n        }\r\n        slideField.style.transform = `translateX(-${offset}px)`;\r\n\r\n\r\n        if(slideIndex == slides.length){\r\n            slideIndex = 1; \r\n        }else{\r\n            slideIndex++;\r\n        }\r\n\r\n\r\n        if(slides.length < 10){\r\n            current.textContent = `0${slideIndex}`;\r\n        }else{\r\n            current.textContent = slideIndex;\r\n        }\r\n    });\r\n\r\n\r\n    prev.addEventListener('click', ()=> {\r\n        if(offset == 0){\r\n            offset = +width.slice(0, width.length - 2) * (slides.length - 1);\r\n        }else{\r\n            offset -= +width.slice(0, width.length - 2 );\r\n        }\r\n\r\n// если на первом слайде и жмет назад\r\n        if(slideIndex == 1){\r\n            slideIndex = slides.length; \r\n        }else{\r\n            slideIndex--;\r\n        }\r\n\r\n// добавляет 0 если число <10\r\n        if(slides.length < 10){\r\n            current.textContent = `0${slideIndex}`;\r\n        }else{\r\n            current.textContent = slideIndex;\r\n        }\r\n//двигает слайд \r\n        slideField.style.transform = `translateX(-${offset}px)`;\r\n        \r\n    });\r\n}\r\nmodule.exports = slider;","function tabs() {\r\n\r\n// 1шаг. создать переменные  !первая переменная это каждый раздел(кнопка) на табе !вторая переменная это информация которая появляется на этом слайде\r\n// !третья переменная это родитель всех табов(кнопок)\r\n\r\n\r\n\r\n    const   tabs = document.querySelectorAll('.tabheader__item'),\r\n            tabsContants = document.querySelectorAll('.tabcontent'),\r\n            tabParent = document.querySelector('.tabheader__items');\r\n            \r\n\r\n\r\n    //функция которая прячет весь контент лишний а так же удаляет класс активности и класс -показать \r\n    function hideTab(){\r\n        tabsContants.forEach((item) => {\r\n            item.classList.remove('show');\r\n            item.classList.add('hide');\r\n        });\r\n        tabs.forEach( item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n\r\n\r\n    //функция для показа определенного слайда убирает с активного окна класс-спрятать и дает ему класс -показать так же дает ему класс -активного окна\r\n    function showTabs(i=0){\r\n        tabsContants[i].classList.add('show');\r\n        tabsContants[i].classList.remove('hide');\r\n\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n    // сначала вызываем все спрятать потом только показать, иначе программа отчистит все и ничего не отобразится\r\n    hideTab();\r\n    showTabs();\r\n    // делигирование присваиываем обработчик событий, проверяем что бы нажатый элемент имел класс (кнопки) на которую нам надо нажать \r\n\r\n    tabParent.addEventListener('click', (event) =>{\r\n        const target = event.target;\r\n        if(target && target.classList.contains('tabheader__item')){\r\n            tabs.forEach((item, i) => {\r\n                if(target == item) {\r\n                    hideTab();\r\n                    showTabs(i);\r\n                } \r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n\r\nmodule.exports = tabs;","function timer(){\r\n    // логика таймера, получаетдату преобразует  его в переменные и отдает дальше \r\n\r\n    const deadline = '2021-06-14';\r\n\r\n    function getTimeRemaining(endTime){\r\n        const t = Date.parse(endTime) - Date.parse(new Date()),\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n            hours = Math.floor(t / (1000 * 60 * 60) % 24),\r\n            minutes = Math.floor(t / (1000 * 60) % 60),\r\n            seconds = Math.floor(t / 1000 % 60);\r\n        \r\n            return{\r\n                'total': t, \r\n                'days': days,\r\n                'hours': hours,\r\n                'minutes': minutes,\r\n                'seconds': seconds\r\n            };   \r\n    }\r\n    //добавляет 0 к числу если оно меньше 10\r\n    function getZero(num){\r\n        if(num >= 0 && num <10 ){\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n    // работа с селектором таймера, внутри функция по обновлению \r\n    function setClock(selector, endTime){\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval= setInterval(updateClock, 1000);\r\n        updateClock();\r\n    // функция для обновления таймера\r\n        function updateClock(){\r\n            const t = getTimeRemaining(endTime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n            if(t.total <= 0){\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    setClock('.timer', deadline);\r\n}\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    const tabs = require('./modules/tabs'),\r\n         calc = require('./modules/calc'),\r\n         timer = require('./modules/timer'),\r\n         slider = require('./modules/slider'),\r\n         modal = require('./modules/modal'),\r\n         forms = require('./modules/forms'),\r\n         cards = require('./modules/cards');\r\n\r\n\r\n    tabs();\r\n    calc();\r\n    timer();\r\n    slider();\r\n    modal();\r\n    forms();\r\n    cards();\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}